
name: Build Artifacts

on:
  push:
    branches: [ sge ]
  # pull_request:
  #   branches: [ master ]
  workflow_dispatch:
  
jobs:
  build_packages:
    strategy:
      matrix:
        include:
          - env: mainnet
            cfg: "chains/mainnet/sge.json"
          - env: testnet
            cfg: "chains/testnet/sge.json"
          - env: staging 
            cfg: "chains/testnet/sge_stage.json"
    runs-on: ubuntu-latest 
    steps:
    - name: Environment
      run:  export NODE_OPTIONS="--max_old_space_size=4096"
      
    - name: Git Checkout Latest
      uses: actions/checkout@v4

    - name: Update config
      run: |
        if [ ${{ matrix.env }} != "mainnet" ]; then cp ${{ matrix.cfg }} chains/mainnet/sge.json; fi

    - name: Install
      run: yarn install --ignore-engines

    - name: Build
      run: yarn build

    - name: Pack 
      run: | 
        mv dist/ pingpub
        tar -czf pingpub_${{ matrix.env }}.tar.gz ./pingpub/ 

    - uses: actions/upload-artifact@v4
      id: upload
      with:
        name: pingpub_${{ matrix.env }}.tar.gz
        path: pingpub_${{ matrix.env }}.tar.gz
        retention-days: 1

  build_image:
    needs: build_packages
    runs-on: ubuntu-latest
    outputs: 
      PINGPUB_AMI_MAINNET: ${{ steps.extract.PINGPUB_AMI_MAINNET }}
      PINGPUB_AMI_TESTNET: ${{ steps.extract.PINGPUB_AMI_TESTNET }}
      PINGPUB_AMI_STAGING: ${{ steps.extract.PINGPUB_AMI_STAGING }}
    strategy:
      matrix:
        include:
          - env: mainnet
            role: secrets.AWS_ROLE_TO_ASSUME_MAINNET
            region:  AWS_REGION_MAINNET
          - env: testnet
            role: secrets.AWS_ROLE_TO_ASSUME_TESTNET
            region: AWS_REGION_TESTNET
          - env: staging 
            role: secrets.AWS_ROLE_TO_ASSUME_STAGING
            region: AWS_REGION_STAGING
    permissions:
      id-token: write 
      contents: read  
    steps:
      - name: Checkout aws-infra
        uses: actions/checkout@v4
        with: 
          repository: 'saage-tech/aws-infra'
          token:  ${{ secrets.READ_ST }}

      - name: Download 
        uses: actions/download-artifact@v4

      - name: Debug 
        run: |
          echo "${{ secrets[matrix.role] }}" > test.txt
          #echo "secrets[matrix.region] }}"

      - name: Debug 
        run: |
          echo "${{ secrets[matrix.role] }}" > test.txt


      - name: Assume role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ [matrix.role] }}
          aws-region: ${{ [matrix.region] }}
          
      - name: Packer Init
        run: |
          ls -la 
          cp pingpub_${{ matrix.env }}.tar.gz/pingpub_${{ matrix.env }}.tar.gz ./packer/blockexplorer/files/pingpub.tar.gz
          cd packer/blockexplorer
          packer init .

      - name: Packer Build 
        working-directory: packer/blockexplorer
        run: |
          packer build -var-file=${{ matrix.env }}.pkvars.hcl blockexplorer.pkr.hcl

      - name: Extract AMI_ID
        id: extract
        run : |
          AMI_ID=$(jq -r '.builds[-1].artifact_id' packer-manifest.json | cut -d ":" -f2)
          USED_ENV=$(echo ${{ matrix.env }} | awk '{print toupper($0)}')
          echo "PINGPUB_AMI_$USED_ENV=$AMI_ID" >> $GITHUB_OUTPUT
          echo $AMI_ID

  build_image_staging:
    needs: build_packages
    runs-on: ubuntu-latest
    outputs: 
      PINGPUB_AMI_STAGING: ${{ steps.extract.PINGPUB_AMI }}
    permissions:
      id-token: write 
      contents: read  
    steps:
      - name: Checkout aws-infra
        uses: actions/checkout@v4
        with: 
          repository: 'saage-tech/aws-infra'
          token:  ${{ secrets.READ_ST }}

      - name: Download 
        uses: actions/download-artifact@v4

      - name: Assume role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME_STAGING }}
          aws-region: ${{ secrets.AWS_REGION_STAGING }}
          
      - name: Packer Init
        run: |
          cp pingpub_${{ matrix.env }}.tar.gz/pingpub_${{ matrix.env }}.tar.gz ./packer/blockexplorer/files/pingpub.tar.gz
          cd packer/blockexplorer
          packer init .

      - name: Packer Build 
        working-directory: packer/blockexplorer
        run: |
          packer build -var-file=${{ matrix.env }}.pkvars.hcl blockexplorer.pkr.hcl

      - name: Extract AMI_ID
        id: extract
        run : |
          AMI_ID=$(jq -r '.builds[-1].artifact_id' packer-manifest.json | cut -d ":" -f2)
          echo "PINGPUB_AMI=$AMI_ID" >> $GITHUB_OUTPUT
          echo $AMI_ID

  build_image_testnet:
    needs: build_packages
    runs-on: ubuntu-latest
    outputs: 
      PINGPUB_AMI_TESTNET: ${{ steps.extract.PINGPUB_AMI }}
    permissions:
      id-token: write 
      contents: read  
    steps:
      - name: Checkout aws-infra
        uses: actions/checkout@v4
        with: 
          repository: 'saage-tech/aws-infra'
          token:  ${{ secrets.READ_ST }}

      - name: Download 
        uses: actions/download-artifact@v4

      - name: Assume role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME_TESTNET }}
          aws-region: ${{ secrets.AWS_REGION_TESTNET }}
          
      - name: Packer Init
        run: |
          cp pingpub_${{ matrix.env }}.tar.gz/pingpub_${{ matrix.env }}.tar.gz ./packer/blockexplorer/files/pingpub.tar.gz
          cd packer/blockexplorer
          packer init .

      - name: Packer Build 
        working-directory: packer/blockexplorer
        run: |
          packer build -var-file=${{ matrix.env }}.pkvars.hcl blockexplorer.pkr.hcl

      - name: Extract AMI_ID
        id: extract
        run : |
          AMI_ID=$(jq -r '.builds[-1].artifact_id' packer-manifest.json | cut -d ":" -f2)
          echo "PINGPUB_AMI=$AMI_ID" >> $GITHUB_OUTPUT
          echo $AMI_ID

  build_image_mainnet:
    needs: build_packages
    runs-on: ubuntu-latest
    outputs: 
      PINGPUB_AMI_MAINNET: ${{ steps.extract.PINGPUB_AMI }}
    permissions:
      id-token: write 
      contents: read  
    steps:
      - name: Checkout aws-infra
        uses: actions/checkout@v4
        with: 
          repository: 'saage-tech/aws-infra'
          token:  ${{ secrets.READ_ST }}

      - name: Download 
        uses: actions/download-artifact@v4

      - name: Assume role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME_TESTNET }}
          aws-region: ${{ secrets.AWS_REGION_TESTNET }}
          
      - name: Packer Init
        run: |
          cp pingpub_${{ matrix.env }}.tar.gz/pingpub_${{ matrix.env }}.tar.gz ./packer/blockexplorer/files/pingpub.tar.gz
          cd packer/blockexplorer
          packer init .

      - name: Packer Build 
        working-directory: packer/blockexplorer
        run: |
          packer build -var-file=${{ matrix.env }}.pkvars.hcl blockexplorer.pkr.hcl

      - name: Extract AMI_ID
        id: extract
        run : |
          AMI_ID=$(jq -r '.builds[-1].artifact_id' packer-manifest.json | cut -d ":" -f2)
          echo "PINGPUB_AMI=$AMI_ID" >> $GITHUB_OUTPUT
          echo $AMI_ID

  update_ami:
    needs: [ build_image_staging, build_image_testnet, build_image_mainnet ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout terragrunt code
        uses: actions/checkout@v4
        with: 
          repository: 'saage-tech/terragrunt-live-sgenetwork'
          token:  ${{ secrets.READ_ST }}

      #- name: Update AMI
      #  run: |
      #    sed -i 's/${{ needs.build_mage.PINGPUB_AMI_ID }}/ami-${PING_PUB}/'  pingpub_staging/live-sgenetwork/terragrunt-live.hierarcct/terragrunt-live-sgengen

      - name: Debug
        run:
          echo ${{ needs.build_image_mainnet.PINGPUB_AMI_MAINNET }}
          echo ${{ needs.build_image_testnet.PINGPUB_AMI_TESTNET }}
          echo ${{ needs.build_image_staging.PINGPUB_AMI_STAGING }}